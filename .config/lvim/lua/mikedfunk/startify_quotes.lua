local startify_quotes = {

  -- and some more from https://defprogramming.com
  -- some more quotes from @codewisdom
  -- { ""select" isn't broken." },
  -- { "'Nuff said." },
  -- { "A LISP programmer knows the value of everything, but the cost of nothing.", "", "- Alan J. Perlis" },
  -- { "A shell script or batch file will execute the same instructions, in the same order, time after time." },
  -- { "All loops are infinite ones for faulty RAM modules." },
  -- { "Allow for concurrency, and you'll design cleaner interfaces with fewer assumptions." },
  -- { "Always design for concurrency." },
  -- { "Always use source code control." },
  -- { "Analyze workflow to improve concurrency." },
  -- { "Care about your craft." },
  -- { "Computers are harder to maintain at high altitude. Thinner air means less cushion between disk heads and platters. Also more radiation." },
  -- { "Craftsmen of an earlier age were proud to sign their work. You should be, too." },
  -- { "Design With contracts." },
  -- { "Design using services." },
  -- { "Estimate the order of your algorithms." },
  -- { "Exploit concurrency in your user's workflow." },
  -- { "It is rare to find a bug in the OS or the compiler, or even a third-party product or library. The bug is most likely in the application." },
  -- { "Learn a text manipulation language." },
  -- { "Organize teams around functionality." },
  -- { "Program for the general case, and put the specifics outside the compiled code base." },
  -- { "Separate views from models." },
  -- { "Sign your work." },
  -- { "Think about your work." },
  -- { "Use blackboards to coordinate disparate facts and agents, while maintaining independence and isolation among participants." },
  -- { "Use blackboards to coordinate workflow." },
  -- { "Use the power of command shells." },
  -- { "Where possible, the routine or object that allocates a resource should be responsible for deallocating it." },
  { "...Thinking this way will teach you two things about computers: One, there's no magic, no matter how much it looks like there is. There’s just work to make things look like magic. And two, it’s crazy in there.", "", "- Paul Ford" },
  { "640K ought to be enough for anybody.", "", "- Bill Gates, 1981" },
  { "A complex system that works is invariably found to have evolved from a simple system that worked. The inverse proposition also appears to be true: A complex system designed from scratch never works and cannot be made to work.", "", "- John Gall" },
  { "A computer lets you make more mistakes faster than any other invention in human history, with the possible exceptions of handguns and tequila.", "", "- Mitch Ratcliffe" },
  { "A dead program normally does a lot less damage than a crippled one." },
  { "A good API is not just easy to use but also hard to misuse.", "", "- JBD" },
  { "A good programmer is someone who always looks both ways before crossing a one-way street.", "", "- Doug Linder" },
  { "A happy programmer is a productive programmer. That's why we optimize for happiness and you should too. Don't just pick tools and practices based on industry standards or performance metrics. Look at the intangibles: Is there passion, pride, and craftmanship here? Would you truly be happy working in this environment eight hours a day?", "", "- 37Signals" },
  { "A human being should be able to change a diaper, plan an invasion, butcher a hog, conn a ship, design a building, write a sonnet, balance accounts, build a wall, set a bone, comfort the dying, take orders, give orders, cooperate, act alone, solve equations, analyze a new problem, pitch manure, program a computer, cook a tasty meal, fight efficiently, die gallantly. Specialization is for insects.", "", "- Robert A. Heinlein" },
  { "A primary cause of complexity is that software vendors uncritically adopt almost any feature that users want.", "", "- Niklaus Wirth" },
  { "A program is like a poem: you cannot write a poem without writing it.", "", "- E.W. Dijkstra" },
  { "A ship in port is safe, but that is not what ships are for. Sail out to sea and do new things.", "", "- Grace Hopper" },
  { "Abstraction is not about vagueness, it is about being precise at a new semantic level.", "", "- Rob Pike" },
  { "Abstractions live longer than details." },
  { "Adapting old programs to fit new machines usually means adapting new machines to behave like old ones.", "", "- Alan Perlis" },
  { "All idioms must be learned. Good idioms only need to be learned once.", "", "- Alan Cooper" },
  { "All problems in computer science can be solved with another level of indirection.", "", "- David Wheeler" },
  { "All programming is an exercise in caching.", "", "- Terje Mathisen" },
  { "All sorts of things can happen when you’re open to new ideas and playing around with things.", "", "- Stephanie Kwolek" },
  { "Almost every attempt at making something better will be regarded by someone else as a personal attack.", "", "- Chris Sacca" },
  { "Almost every programming language is overrated by its practitioners.", "", "- Larry Wall" },
  { "Always code as if the person who ends up maintaining your code is a violent psychopath who knows where you live.", "", "- John Woods" },
  { "Always implement things when you actually need them, never when you just foresee that you need them.", "", "- Ron Jeffries" },
  { "An evolving system increases its complexity unless work is done to reduce it.", "", "- Meir Lehman" },
  { "Answer: One day at a time!" },
  { "Any non-trivial program contains at least one bug.", "", "- Anonymous" },
  { "Apex predator of grug is complexity", "complexity bad", "say again:", "complexity very bad", "you say now:", "complexity very, very bad", "given choice between complexity or one on one against t-rex, grug take t-rex: at least grug see t-rex", "", "- https://grugbrain.dev/" },
  { "Assertions validate your assumptions. Use them to protect your code from an uncertain world." },
  { "At some point software design becomes less about what and more about when.", "", "- Kent Beck" },
  { "At the source of every error which is blamed on the computer you will find at least two human errors, including the error of blaming it on the computer.", "", "- Anonymous" },
  { "Avoid coupling by writing \"shy\" code and applying the Law of Demeter." },
  { "Be a catalyst for change." },
  { "Be curious. Read widely. Try new things. I think a lot of what people call intelligence boils down to curiosity.", "", "- Aaron Swartz" },
  { "Becoming a good engineer is about collecting experience. Each project, even small ones, is a chance to add new techniques and tools to your toolbox.", "", "- Addy Osmani" },
  { "Beware of vendor hype, industry dogma, and the aura of the price tag. Judge tools on their merits." },
  { "Caches are bugs waiting to happen.", "", "- Rob Pike" },
  { "Code breaks and then it falls apart, and it often takes many, many tries until that magical moment when what you're trying to build comes to life.", "", "- Reshma Saujani" },
  { "Code generators increase your productivity and help avoid duplication." },
  { "Code is there to explain the comments to the computer", "", "- Andy Harris" },
  { "Code never lies, comments sometimes do.", "", "- Ron Jeffries" },
  { "Come to understand your users' expectations, then deliver just that little bit more." },
  { "Compatibility means repeating other peoples' mistakes" },
  { "Complexity kills. It sucks the life out of developers, it makes products difficult to plan, build and test, it introduces security challenges, and it causes end-user and administrator frustration.", "", "- Ray Ozzie" },
  { "Computer science education cannot make anybody an expert programmer any more than studying brushes and pigment can make somebody an expert painter.", "", "- Eric S. Raymond" },
  { "Computers are good at following instructions, but not at reading your mind.", "", "- Donald Knuth" },
  { "Computers are useless. They can only give you answers.", "", "- Pablo Picasso" },
  { "Constraints are advantages in disguise. Limited resources force you to make do with what you've got. There's no room for waste. And that forces you to be creative.", "", "- 37Signals" },
  { "Contrary to popular belief, Unix is user friendly. It just happens to be very selective about who it decides to make friends with." },
  { "Controlling complexity is the essence of computer programming.", "", "- Brian Kernighan" },
  { "Crash early." },
  { "Create and maintain a single source of all the specific terms and vocabulary for a project." },
  { "Critically analyze what you read and hear." },
  { "Debugging is like being the detective in a crime movie where you are also the murderer.", "", "- Filipe Fortes" },
  { "Deleted code is debugged code.", "", "- Jeff Sickel" },
  { "Design and code in your user's language." },
  { "Design components that are self-contained, independent, and have a single, well-defined purpose." },
  { "Design in terms of services-independent, concurrent objects behind well-defined, consistent interfaces." },
  { "Design to test." },
  { "Developing tolerance for imperfection is the key factor in turning chronic starters into consistent finishers.", "", "- Jon Acuff" },
  { "Don't attach your identity to your code. Don't attach anyone's identity to their code. Realize that people are separate from the artifacts they produce. Don't take code criticism personally but be very careful when criticizing others' code.", "", "- Alex Ewerlöf" },
  { "Don't be swayed by vendors, media hype, or dogma. Analyze information in terms of you and your project." },
  { "Don't blindly adopt any technique without putting it into the context of your development practices and capabilities." },
  { "Don't comment bad code. Rewrite it.", "", "- Brian W. Kernighan" },
  { "Don't do speculative programming. Only make the code extensible if it is a validated assumption that it'll be extended. Chances are by the time it gets extended, the problem definition looks different from when you wrote the code.", "", "- Alex Ewerlöf" },
  { "Don't document the problem, fix it.", "", "- Atli Björgvin Oddsson" },
  { "Don't even start considering solutions until you understand the problem. Your goal should be to \"solve\" the problem mostly within the problem domain, not the solution domain.", "", "- Oz Nova" },
  { "Don't fall into the specification spiral - at some point you need to start coding." },
  { "Don't get so engrossed in the details that you forget to check what's happening around you." },
  { "Don't let anyone rob you of your imagination, your creativity, or your curiosity. It's your place in the world; it's your life. Go on and do all you can with it, and make it the life you want to live.", "", "- Mae Jemison" },
  { "Don't live with broken windows.", "", "- Andy Hunt and Dave Thomas" },
  { "Don't separate designers from coders, testers from data modelers. Build teams the way you build code." },
  { "Easy things should be easy and hard things should be possible.", "", "- Larry Wall" },
  { "Eliminate effects between unrelated things." },
  { "English is just a programming language." },
  { "Enjoy every step you take. If you're curious, there is always something new to be discovered in the backdrop of your daily life.", "", "- Roy T. Bennett" },
  { "Estimate before you start. You'll spot potential problems up front." },
  { "Estimate to avoid surprises." },
  { "Every great developer you know got there by solving problems they were unqualified to solve until they actually did it.", "", "- Patrick McKenzie" },
  { "Every piece of knowledge must have a single, unambiguous, authoritative representation within a system." },
  { "Exceptions can suffer from all the readability and maintainability problems of classic spaghetti code. Reserve exceptions for exceptional things." },
  { "Failure is central to engineering. Every single calculation that an engineer makes is a failure calculation. Successful engineering is all about understanding how things break or fail.", "", "- Henry Petroski" },
  { "Fancy algorithms are slow when n is small, and n is usually small.", "", "- Rob Pike" },
  { "Feature-based releases expand to fill all available time until someone feels guilty for not finishing the feature on a magical, wish-fulfillment schedule, and hey, has it been a couple of years already?", "", "- Chromatic" },
  { "Find bugs once." },
  { "Finish what you start." },
  { "First do it, then do it right, then do it better.", "", "- Addy Osmani" },
  { "First, solve the problem. Then, write the code.", "", "- John Johnson" },
  { "Fix bad designs, wrong decisions, and poor code when you see them." },
  { "Fix the problem, not the blame." },
  { "Fools ignore complexity. Pragmatists suffer it. Some can avoid it. Geniuses remove it.", "", "- Alan Perlis" },
  { "For a successful technology, reality must take precedence over public relations, for Nature cannot be fooled.", "", "- Richard Feynman" },
  { "Formal education will make you a living. Self-education will make you a fortune.", "", "- Jim Rohn" },
  { "Functions delay binding; data structures induce binding. Moral: Structure data late in the programming process.", "", "- Alan J. Perlis" },
  { "Functions should do one thing. They should do it well. They should do it only.", "", "- Robert C. Martin" },
  { "Gain flexibility at low cost by designing your application in terms of models and views." },
  { "Get a feel for how long things are likely to take before you write code." },
  { "Good code is its own best documentation. As you're about to add a comment, ask yourself, \"How can I improve the code so that this comment isn't needed?\"", "", "- Steve McConnell" },
  { "Hell isn't other people's code. Hell is your own code from 3 years ago.", "", "- Jeff Atwood" },
  { "Hope is not a plan.", "", "- Jonathan Rosenberg" },
  { "How much time do you invest in cleaning it? Roughly the same amount of time it took you to write it. And that's the problem - nobody wants to put that effort in. Because they think they're done when it works. You're not done when it works! You're done when it's right.", "", "- Uncle Bob" },
  { "I love deadlines. I like the whooshing sound they make as they fly by.", "", "- Douglas Adams" },
  { "I think a lot of new programmers like to use advanced data structures and advanced language features as a way of demonstrating their ability. I call it the lion-tamer syndrome. Such demonstrations are impressive, but unless they actually translate into real wins for the project, avoid them.", "", "- Glyn Williams" },
  { "I would rather die of passion than of boredom.", "", "- Vincent Van Gogh" },
  { "I've finally learned what \"upward compatible\" means. It means we get to keep all our old mistakes.", "", "- Linus Torvalds" },
  { "Identify and test significant program states. Just testing lines of code isn't enough." },
  { "If a system is to serve the creative spirit, it must be entirely comprehensible to a single individual.", "", "- Alan Kay" },
  { "If debugging is the process of removing bugs, then programming must be the process of putting them in.", "", "- Edsger W. Dijkstra" },
  { "If it doesn’t work, it doesn’t matter how fast it doesn’t work.", "", "- Mich Ravera" },
  { "If it's easy to reuse, people will. Create an environment that supports reuse." },
  { "If programmers were electricians, parallel programmers would be bomb disposal experts. Both cut wires.", "", "- Bartosz Milewski" },
  { "If there is a feature of a language that is sometimes problematic, and if it can be replaced with another feature that is more reliable, then always use the more reliable feature.", "", "- Douglas Crockford" },
  { "If you can get today’s work done today, but you do it in such a way that you can’t possibly get tomorrow’s work done tomorrow, then you lose.", "", "- Martin Fowler" },
  { "If you don't finish then you're just busy, not productive.", "", "- Brian Kernighan" },
  { "If you hand me code that works perfectly but I can't understand it, then as soon as the requirements change that code is useless. On the other hand, if you give me code that _does not work_ but I can understand it, I can make it work.", "", "It is much more important that your peers can understand the code that you write than the computer can understand the code that you write.", "", "- Uncle Bob" },
  { "If you want to increase your success rate, double your failure rate.", "", "- Thomas Watson Jr" },
  { "If you're actually doing TDD, you're throwing away tests all the time, as your understanding of what the code is changes.", "", "- Kerri Miller" },
  { "If you're ever worried about losing some data, just put it after a todo comment in a codebase. Those things never get removed.", "", "- Ólafur Waage" },
  { "If you're not failing 90% of the time, then you're probably not working on sufficiently challenging problems.", "", "- Alan Kay" },
  { "Implement technology choices for an application as configuration options, not through integration or engineering." },
  { "In many ways, the prism of computer science is harmful for the development of information systems.", "", "- David Heinemeier Hansson (DHH)" },
  { "In programming, the hard part isn't solving problems, but deciding what problems to solve.", "", "- Paul Graham" },
  { "Incorrect documentation is often worse than no documentation.", "", "- Bertrand Meyer" },
  { "Inside every large program, there is a small program trying to get out.", "", "- C.A.R. Hoare" },
  { "Instead of excuses, provide options. Don't say it can't be done; explain what can be done." },
  { "Introduce bugs on purpose in a separate copy of the source to verify that testing will catch them." },
  { "Invest in the abstraction, not the implementation. Abstractions can survive the barrage of changes from different implementations and new technologies." },
  { "Invest regularly in your knowledge portfolio." },
  { "Involve your users in determining the project's real quality requirements." },
  { "It can be better to copy a little code than to pull in a big library for one function. Dependency hygiene trumps code reuse.", "", "- Rob Pike" },
  { "It doesn't really matter whether the bug is your fault or someone else's - it is still your problem, and it still needs to be fixed." },
  { "It is better to do the right problem the wrong way than the wrong problem the right way.", "", "- Richard Hamming" },
  { "It is better to have 100 functions operate on one data structure than 10 functions on 10 data structures.", "", "- Alan Perlis" },
  { "It is easier to change the specification to fit the program than vice versa.", "", "- Alan Perlis" },
  { "It is foolish to answer a question that you do not understand. It is sad to work for an end that you do not desire.", "", "- George Pólya" },
  { "It would be a mistake to think that solving problems is a purely intellectual affair; determination and emotions play an important role.", "", "- George Pólya" },
  { "It's OK to figure out murder mysteries, but you shouldn't need to figure out code. You should be able to read it.", "", "- Steve McConnell" },
  { "It's not at all important to get it right the first time. It's vitally important to get it right the last time.", "", "- Dave Thomas" },
  { "It's the best way to gain insight into how the system will really be used." },
  { "Iterate the schedule with the code." },
  { "Java is to JavaScript as ham is to hamster.", "", "- Jeremy Keith" },
  { "Just as you might weed and rearrange a garden, rewrite, rework, and re-architect code when it needs it. Fix the root of the problem." },
  { "Just because something is easy to measure doesn't mean it's important.", "", "- DHH" },
  { "Keep knowledge in plain text." },
  { "Later equals never.", "", "- Le Blanc's Law" },
  { "Learn not to add too many features right away, and get the core idea built and tested.", "", "- Leah Culver" },
  { "Let me remind you that information is not knowledge, knowledge is not wisdom, and wisdom is not foresight. Each grows out of the other, and we need them all.", "", "- Arthur C. Clarke" },
  { "Machines should work. People should think.", "", "- IBM Polyanna Principle" },
  { "Make everything as simple as possible, but not simpler.", "", "- Albert Einstein" },
  { "Make it easy to reuse." },
  { "Make it work, then make it beautiful, then if you really, really have to, make it fast. 90 percent of the time, if you make it beautiful, it will already be fast. So really, just make it beautiful!", "", "- Joe Armstrong" },
  { "Make learning a habit." },
  { "Make quality a requirements issue." },
  { "Mathematical analysis of algorithms doesn't tell you everything. Try timing your code in its target environment." },
  { "Measuring programming progress by lines of code is like measuring aircraft building progress by weight.", "", "- Bill Gates" },
  { "Methods are just functions with a special first argument.", "", "- Andrew Gerrand" },
  { "Minimize coupling between modules." },
  { "Most of the biggest problems in software are problems of misconception.", "", "- Rich Hickey" },
  { "Most of you are familiar with the virtues of a programmer. There are three, of course: laziness, impatience, and hubris.", "", "- Larry Wall" },
  { "Most software today is very much like an Egyptian pyramid with millions of bricks piled on top of each other, with no structural integrity, but just done by brute force and thousands of slaves.", "", "- Alan Kay" },
  { "Never discourage anyone who continually makes progress, no matter how slow", "", "- Plato" },
  { "Nine people can’t make a baby in a month.", "", "- Frederick P. Brooks" },
  { "No decision is cast in stone. Instead, consider each as being written in the sand at the beach, and plan for change." },
  { "No matter how far down the wrong road you have gone, turn back now." },
  { "No matter how slick the demo is in rehearsal, when you do it in front of a live audience the probability of a flawless presentation is inversely proportional to the number of people watching, raised to the power of the amount of money involved.", "", "- Mark Gibbs" },
  { "Not all change is an improvement, but all improvement requires change.", "", "- Larry Garfield" },
  { "Not all eyes that notice bugs in Open Source code belong to saints who will report or repair them in the interest of the public good.", "", "- Martin Fowler" },
  { "Nothing is more permanent than a temporary solution.", "", "- Albert Einstein" },
  { "Once a human tester finds a bug, it should be the last time a human tester finds that bug. Automatic tests should check for it from then on." },
  { "Once a new technology rolls over you, if you're not part of the steamroller you're part of the road.", "", "- Stewart Brand" },
  { "One accurate measurement is worth a thousand expert opinions.", "", "- Grace Hopper" },
  { "One of the best programming skills you can have is knowing when to walk away for awhile.", "", "- Oscar Godson" },
  { "Optimism is an occupational hazard of programming; feedback is the treatment.", "", "- Kent Beck" },
  { "Optimization hinders evolution.", "", "- Alan Perlis" },
  { "Overnight success takes 30 years.", "", "- Sophie Wilson, Early designer of ARM instruction set and lead dev of BBC BASIC" },
  { "Patterns mean \"I have run out of language.\" ", "", "- Rich Hickey" },
  { "Paying attention to how things work without thinking about how they fail is a recipe for disaster.", "", "- Cory Doctorow" },
  { "People have an enormous tendency to resist change. They love to say, \"We've always done it this way.\" I try to fight that.", "", "- Grace Hopper" },
  { "Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away." },
  { "Plain text won't become obsolete. It helps leverage your work and simplifies debugging and testing." },
  { "Profanity is the one language all programmers know best.", "", "- Anonymous" },
  { "Program close to the problem domain." },
  { "Programmers are often angry because they’re often scared.", "", "- Paul Ford" },
  { "Programming is a good job if you want to spend all of your time at the absolute limit of your capacity to understand things.", "", "- @Pentadact" },
  { "Programming is not about typing, it's about thinking.", "", "- Rich Hickey" },
  { "Programming is not easy like Sunday morning, it is silent poetry.", "", "- Waseem Latif" },
  { "Programming isn't about what you know; it's about what you can figure out.", "", "- Chris Pine" },
  { "Programming today is a race between software engineers striving to build bigger and better idiot-proof programs, and the universe trying to build bigger and better idiots. So far, the universe is winning.", "", "- Rick Cook" },
  { "Programs must be written for people to read, and only incidentally for machines to execute.", "", "- Harold Abelson, Gerald Jay" },
  { "Programs, like people, get old. We can’t prevent ageing, but we can understand its causes, limit its effects and reverse some of the damage.", "", "- Mario Fusco" },
  { "Prototype to learn." },
  { "Prototyping is a learning experience. Its value lies not in the code you produce, but in the lessons you learn." },
  { "Prove your assumptions in the actual environment - with real data and boundary conditions." },
  { "Put abstractions in code, details in metadata." },
  { "Question: How does a large software project get to be one year late?" },
  { "Rarely is anyone thanked for the work they did to prevent the disaster that didn't happen.", "", "- Mikko Hypponen" },
  { "Ready, fire, aim: the fast approach to software development. Ready, aim, aim, aim, aim: the slow approach to software development.", "", "- Anonymous" },
  { "Recursion is the root of computation since it trades description for time.", "", "- Alan Perlis" },
  { "Refactor early, refactor often." },
  { "Refuctoring — the process of taking a well-designed piece of code and, through a series of small, reversible changes, making it completely unmaintainable by anyone except yourself.", "", "- Jason Gorman" },
  { "Rely only on reliable things. Beware of accidental complexity, and don't confuse a happy coincidence with a purposeful plan." },
  { "Remember the big picture." },
  { "Requirements rarely lie on the surface. They're buried deep beneath layers of assumptions, misconceptions, and politics." },
  { "Rules of Optimization: Rule 1: Don't do it. Rule 2 (for experts only): Don't do it yet.", "", "- Michael A. Jackson" },
  { "Should array indices start at 0 or 1? My compromise of 0.5 was rejected without, I thought, proper consideration.", "", "- Stan Kelly-Bootle" },
  { "Simple doesn't mean stupid. Thinking that it does, does.", "", "- Paul Krugman" },
  { "Simplicity does not precede complexity, but follows it.", "", "- Alan Perlis" },
  { "So-called \"smart\" software usually is the worst you can imagine.", "", "- Christian Neukirchen" },
  { "Software being \"Done\" is like lawn being \"Mowed\".", "", "- Jim Benson" },
  { "Software can't be perfect. Protect your code and users from the inevitable errors." },
  { "Software is hard.", "", "- Donald Knuth" },
  { "Some folks talk about ending the day with a clean checkin.", "I'm increasingly finding it better to end with a failing test; it helps me regain context the next morning.", "", "- Dave Thomas" },
  { "Some things are better done than described." },
  { "Sometimes the problem is to discover what the problem is.", "", " - Gordon Glegg" },
  { "Source code control is a time machine for your work - you can go back." },
  { "Start thinking about testing before you write a line of code." },
  { "Such is modern computing: everything simple is made too complicated because it's easy to fiddle with; everything complicated stays complicated because it's hard to fix.", "", "- Rob Pike" },
  { "Take a deep breath and think about what could be causing the bug." },
  { "Talk is cheap. Show me the code.", "", "- Linus Torvalds" },
  { "Telling a programmer there's already a library to do X is like telling a songwriter there's already a song about love.", "", "- Pete Cordell" },
  { "Test early. Test often. Test automatically." },
  { "Test ruthlessly. Don't make your users find bugs for you." },
  { "Test state coverage, not code coverage." },
  { "Test your estimates." },
  { "Test your software, or your users will." },
  { "Testing leads to failure, and failure leads to understanding.", "", "- Burt Rutan" },
  { "Testing shows the presence, not the absence of bugs.", "", "- Edsger W Dijkstra" },
  { "Tests that run with every build are much more effective than test plans that sit on a shelf." },
  { "The Three Laws of TDD:", "(1) You may not write production code until you have written a failing unit test.", "(2) You may not write more of a unit test than is sufficient to fail, and not compiling is failing.", "(3) You may not write more production code than is sufficient to pass the currently failing test.", "", "- Robert C. Martin (Uncle Bob)" },
  { "The art of programming is the art of organizing complexity, of mastering multitude and avoiding its bastard chaos as effectively as possible.", "", "- E.W. Dijkstra" },
  { "The best learners are the people who push through the discomfort of being objectively bad at something.", "", "- Tommy Collison" },
  { "The best programs are the ones written when the programmer is supposed to be working on something else.", "", "- Melinda Varian" },
  { "The best reaction to “this is confusing, where are the docs” is to rewrite the feature to make it less confusing, not write more docs.", "", "- Jeff Atwood" },
  { "The best way to get the right answer on the internet is not to ask a question; it's to post the wrong answer.", "", "- Cunningham's Law" },
  { "The best way to prepare [to be a programmer] is to write programs, and to study great programs that other people have written. In my case, I went to the garbage cans at the Computer Science Center and fished out listings of their operating system.", "", "- Bill Gates" },
  { "The central enemy of reliability is complexity.", "", "- Daniel Geer" },
  { "The cleaner and nicer the program, the faster it's going to run. And if it doesn't, it'll be easy to make it fast.", "", "- Joshua Bloch" },
  { "The code you write makes you a programmer. The code you delete makes you a good one. The code you don't have to write makes you a great one.", "", "- Mario Fusco" },
  { "The competent programmer is fully aware of the strictly limited size of his own skull; therefore he approaches the programming task in full humility, and among other things he avoids clever tricks like the plague.", "", "- E. W. Dijkstra" },
  { "The craft of programming begins with empathy, not formatting or languages or tools or algorithms or data structures.", "", "- Kent Beck" },
  { "The difference between theory and practice is smaller in theory than in practice.", "", "- Anonymous" },
  { "The editor should be an extension of your hand; make sure your editor is configurable, extensible, and programmable." },
  { "The essence of XML is this: the problem it solves is not hard, and it does not solve the problem well.", "", "- Phil Wadler" },
  { "The fact that you got it working is only half the job. Once the code works, that's when you have to clean it. No one writes clean code first.", "", "- Uncle Bob" },
  { "The first 90% of the code accounts for the first 90% of the development time. The remaining 10% of the code accounts for the other 90% of the development time.", "", "- Jeff Atwood" },
  { "The first step of any project is to grossly underestimate its complexity and difficulty.", "", "- Nicoll Hunt" },
  { "The function of good software is to make the complex appear to be simple.", "", "- Bjarne Stroustrup" },
  { "The good news about computers is that they do what you tell them to do. The bad news is that they do what you tell them to do.", "", "- Ted Nelson" },
  { "The greatest performance improvement of all is when a system goes from not-working to working.", "", "- John Ousterhout" },
  { "The ideal numbers of arguments for a function is zero (niladic). Next comes one (monadic), followed closely by two (dyadic). Three arguments (triadic) should be avoided where possible. More than three (polyadic) requires very special justification ‐ and then shouldn't be used anyway.", "", "- Robert C. Martin" },
  { "The important thing is not to stop questioning. Curiosity has its own reason for existing.", "", "- Albert Einstein" },
  { "The key to making programs fast is to make them do practically nothing.", "", "- Mike Haertel" },
  { "The man who asks a question is a fool for a minute. The man who does not ask is a fool for life.", "", "- Confucius" },
  { "The most dangerous phrase in the language is, \"We've always done it this way.\"", "", "- Grace Hopper" },
  { "The most effective debugging tool is still careful thought, coupled with judiciously placed print statements.", "", "- Brian W. Kernighan" },
  { "The most valuable thing you can make is a mistake - you can't learn anything from being perfect.", "", "- Adam Osborne" },
  { "The object-oriented model makes it easy to build up programs by accretion. What this often means, in practice, is that it provides a structured way to write spaghetti code.", "", "- Paul Graham" },
  { "The object-oriented version of 'Spaghetti code' is, of course, 'Lasagna code'. (Too many layers).", "", "- Roberto Waltman" },
  { "The only way to learn a new programming language is by writing programs in it.", "", "- Dennis M. Ritchie" },
  { "The proper use of comments is to compensate for our failure to express ourself in code.", "", "- Robert C. Martin" },
  { "The purpose of abstracting is not to be vague, but to create a new semantic level in which one can be absolutely precise.", "", "- Edsger W Dijkstra" },
  { "The question of whether computers can think is like the question of whether submarines can swim.", "", "- Edsger W. Dijkstra" },
  { "The secret to optimization is changing the problem to make it easier to optimize.", "", "- John Carmack" },
  { "The smartest thing you can do as a programmer is realize how stupid you are, and make accommodations.", "", "- Jason Swett" },
  { "The sooner you start to code, the longer the program will take.", "", "- Roy Carlson" },
  { "The value of a prototype is in the education it gives you, not in the code itself.", "", "- Alan Cooper" },
  { "Theory and practice sometimes clash. And when that happens, theory loses. Every single time.", "", "- Linus Torvalds" },
  { "There are no final decisions." },
  { "There are only two industries that refer to their customers as \"users\".", "", "- Edward Tufte" },
  { "There are two ways of constructing a software design: One way is to make it so simple that there are obviously no deficiencies, and the other way is to make it so complicated that there are no obvious deficiencies.", "", "- Leslie Lamport" },
  { "There are two ways to write error-free programs; only the third works.", "", "- Alan J. Perlis" },
  { "There is not now, nor has there ever been, nor will there ever be, any programming language in which it is the least bit difficult to write bad code.", "", "- Flon's Law" },
  { "There is nothing quite so useless as doing with great efficiency something that should not be done at all.", "", "- Alan Kay" },
  { "There's no point in having great ideas if you don't communicate them effectively." },
  { "They did not know it was impossible, so they did it!", "", "- Mark Twain" },
  { "Think twice, code once." },
  { "To be a programmer is to develop a carefully managed relationship with error.", "", "- Ellen Ullman" },
  { "To iterate is human, to recurse divine.", "", "- L. Peter Deutsch" },
  { "To me programming is more than an important practical art. It is also a gigantic undertaking in the foundations of knowledge.", "", "- Grace Hopper" },
  { "To understand recursion, one must first understand recursion.", "", "- Stephen Hawking" },
  { "Tracer bullets let you home in on your target by trying things and seeing how close they land." },
  { "Treat your code like poetry and take it to the edge of the bare minimum.", "", "- Ilyo" },
  { "Turn off the autopilot and take control. Constantly critique and appraise your work." },
  { "Unix was not designed to stop its users from doing stupid things, as that would also stop them from doing clever things." },
  { "Use a project glossary." },
  { "Use a single editor well." },
  { "Use assertions to prevent the impossible." },
  { "Use contracts to document and verify that code does no more and no less than it claims to do." },
  { "Use exceptions for exceptional problems." },
  { "Use experience you gain as you implement to refine the project time scales." },
  { "Use saboteurs to test your testing." },
  { "Use the shell when graphical user interfaces don't cut it." },
  { "Use tracer bullets to find the target." },
  { "Walking on water and developing software from a specification are easy if both are frozen.", "", "- Edward V. Berard" },
  { "We are all shaped by the tools we use, in particular: the formalisms we use shape our thinking habits, for better or for worse, and that means that we have to be very careful in the choice of what we learn and teach, for unlearning is not really possible.", "", "- Edsger Dijkstra" },
  { "We are just as proud of what our product don't do as we are of what they do.", "", "- 37Signals" },
  { "Weeks of coding can save you hours of planning.", "", "- Unknown" },
  { "What one programmer can do in one month, two programmers can do in two months.", "", "- Frederick P. Brooks" },
  { "When faced with an impossible problem, identify the real constraints. Ask yourself: \"Does it have to be done this way? Does it have to be done at all?\"" },
  { "When in doubt, leave it out.", "", "- Joshua Bloch" },
  { "When we focus on building an intuition, we don't need to memorize rules. We can rely on our mental model to come up with the right answer. It's wayyy more practical.", "", "- Josh W. Comeau" }, -- https://www.joshwcomeau.com/css/surprising-truth-about-pixels-and-accessibility/
  { "When you come across a stumbling block because the code doesn't quite fit anymore, or you notice two things that should really be merged, or anything else at all strikes you as being \"wrong\", don't hesitate to change it. There's no time like the present.", "", "- Andy Hunt, Dave Thomas" },
  { "Why do we make the mess? What drives us to make the mess in the first place? Because we want to go fast.", "- Uncle Bob" },
  { "Why do we never have time to do it right, but always have time to do it over?" },
  { "Why spend your life developing software unless you care about doing it well?" },
  { "Wizards can generate reams of code. Make sure you understand all of it before you incorporate it into your project." },
  { "Work with a user to think like a user." },
  { "Write code that writes code." },
  { "Write documents as you would write code: honor the DRY principle, use metadata, MVC, automatic generation, and so on." },
  { "Write shy code - modules that don't reveal anything unnecessary to other modules and that don't rely on other modules' implementations.", "", "- Andy Hunt, Dave Thomas" },
  { "You can't force change on people. Instead, show them how the future might be and help them participate in creating it." },
  { "You haven't mastered a tool until you understand when it should not be used.", "", "- Kelsey Hightower" },
  { "You know you are working on clean code when each routine you read turns out to be pretty much what you expected", "", "- Ward Cunningham" },
  { "You never finish a program, you just stop working on it." },
  { "You spend a large part of each day working with text. Why not have the computer do some of it for you?" },
  { "You've been building experience all your life. don't ignore niggling doubts." },
  { "Your code will eventually have its assumptions challenged and stop working.", "", "- /u/the7key" },
  { "Your task is not to foresee the future, but to enable it.", "", "- Antoine de Saint Exupéry" },
}

return startify_quotes
